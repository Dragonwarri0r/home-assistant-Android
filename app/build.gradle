apply plugin: 'com.android.application'

ext.languages = ["de", "ja", "nl"]
ext.supportLibraryVersion = "25.3.1"
ext.c_languages = ["de", "ja", "nl"]
ext.crowdinKey = null

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "io.homeassistant.android"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 3
        versionName "1.0-RC1"
        resConfigs languages
        setProperty("archivesBaseName", "hass-$versionName")

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            versionNameSuffix "-debug"
        }
    }
    sourceSets {
        main {
            res.srcDirs = [
                    res.srcDirs.toArray()[0],
                    "src/main/res/viewholders"
            ]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
    }
}

def propFile = project.file("keyStore.properties")
if (propFile.exists()) {
    Properties props = new Properties()
    props.load(new FileInputStream(propFile))
    def main = android.signingConfigs.create("main")
    main.storeFile project.file(props["keyStore"])
    main.storePassword props["keyStorePassword"]
    main.keyAlias props["keyAlias"]
    main.keyPassword props["keyPassword"]

    android.buildTypes.release.signingConfig = main
    android.buildTypes.debug.signingConfig = main

    ext.crowdinKey = props["crowdinKey"]
}

repositories {
    jcenter()
}

dependencies {
    compile "com.android.support:appcompat-v7:$supportLibraryVersion"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile "com.android.support:customtabs:$supportLibraryVersion"
    compile "com.android.support:design:$supportLibraryVersion"
    compile "com.android.support:preference-v14:$supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$supportLibraryVersion"

    compile 'com.squareup.okhttp3:okhttp:3.6.0'
    compile('com.afollestad:ason:1.4.13') {
        exclude group: 'org.json', module: 'json'
    }

    compile "com.google.android.gms:play-services-location:10.2.4"

    testCompile 'junit:junit:4.12'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2') {
        exclude group: 'com.android.support'
    }
    androidTestCompile('com.android.support.test:runner:0.5') {
        exclude group: 'com.android.support'
    }
    androidTestCompile('com.android.support.test:rules:0.5') {
        exclude group: 'com.android.support'
    }
}

task updateTranslations() {
    doLast {
        if (crowdinKey == null)
            return
        for (int i = 0; i < c_languages.size(); i++) {
            String c_lang = c_languages[i]
            if (c_lang == "")
                continue
            String lang = languages[i]
            String file = "\$PWD/src/main/res/values-$lang/strings.xml"
            exec {
                executable "bash"
                args "-c", "wget -O \"$file\" \"https://api.crowdin.com/api/project/home-assistant-android/export-file?file=strings.xml&language=$c_lang&key=$crowdinKey\""
            }
        }
    }
}